//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : GruppeC
//  @ File Name : Road.h
//  @ Date : 15.04.2019
//  @ Author : 
//
//
#if !defined(_ROAD_H)
#define _ROAD_H

#define _CRT_SECURE_NO_WARNINGS

#include "Vehicle.h"
#include <map>
#include <fstream>
#include <iostream>
using std::map;

#include "Polyline2D.h"
class Junction;
class RoadNetwork;

class Road
{
public:
	Road(Junction& start, Junction& end, const Polyline2D& position, const char roadName[]);
	~Road();
	double getLength();
	bool addVehicle(Vehicle& veh, bool atStart);
	bool removeVehicle(Vehicle& veh);
	const char* getName() const;
	void draw(Drawer2D& drawer) const;
	Junction* getJunction(bool atStart) const;
	// Returns the coordinate of tzhe given vehicle (if it's on the road),
	// If the vehicle is off the road, then the result will be invalid
	Point2D getPosition(const Vehicle& vehicle) const;
	//outputs the road into the ofstream
	void save(std::ofstream& outFile);
private:
	struct VehicleInfo
	{
		double startPosition;	// odometer value on joining the road
		bool atStart;
	};
	static const unsigned short MAX_NETWORKS = 2;
	Junction* startNode;
	Junction* endNode;
	map<const Vehicle*, VehicleInfo> vehicles;
	RoadNetwork* networks[MAX_NETWORKS];
	Polyline2D course;
	char* name;
};

#endif  //_ROAD_H
